spring.application.name=begin
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
spring.web.resources.static-locations=file:src/main/webapp/resources/
spring.mvc.static-path-pattern=/**
spring.web.resources.cache.period=0
spring.web.resources.cache.cachecontrol.max-age=0
spring.web.resources.cache.cachecontrol.no-store=true 
spring.web.resources.cache.cachecontrol.no-cache=true
spring.web.resources.cache.cachecontrol.must-revalidate=true

#file upload
spring.servlet.multipart.max-file-size=4MB
spring.servlet.multipart.max-request-size=8MB

#email
spring.mail.host=smtp.naver.com
spring.mail.port=465
spring.mail.username=zzdnd6130
spring.mail.password=dnjsqhdwnd1!
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.naver.com
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2

#HikariCP settings
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:xe
spring.datasource.username=scott
spring.datasource.password=tiger

#Hibernate가 애플리케이션 시작 시점에 데이터베이스 스키마를 업데이트하도록 설정한다.
spring.jpa.hibernate.ddl-auto=update
#Hibernate가 실행하는 SQL 쿼리를 콘솔에 출력하도록 설정한다.
spring.jpa.show-sql=true
#언더스코어(_)로 구분하여 데이터베이스 테이블과 컬럼 이름을 생성한다.
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
